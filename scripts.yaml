install:
  (command): cd packages/sip && dart pub global activate --source path . --overwrite
  (description): Install `sip` globally
  (aliases):
    - i

compile-blob: sh packages/script_runner/scripts/compile_blob.sh {--platform} {--arch}

_packages:
  - cd packages/sip &&
  - cd packages/script_runner &&

pana: "{$_packages} dart pub run pana"

format: "{$_packages} dart format ."
analyze: "{$_packages} dart analyze ."

barrel: cd packages/sip && dart run barreler build

clean: find . -name ".dart_tool" -type d -exec rm -rf {} +

prep:
  (command):
    - (+) {$format} --set-exit-if-changed
    - (+) {$analyze} --fatal-infos --fatal-warnings
    - (+) {$prep:pubspecs}
    - "{$_packages} dart run build_runner build --delete-conflicting-outputs"
    - |
      # make sure we are on the same version
      version=$(grep -m 1 "# " CHANGELOG.md | awk '{print $2}')
      SIP_VERSION=$(sip --version)
      if [ "$version" != "$SIP_VERSION" ]; then
        echo "Version mismatch: CHANGELOG.md: $version, sip: $SIP_VERSION"
        exit 1
      fi
    - (+) {$prep:changelog}
    - (+) {$prep:license}
    - (+) {$prep:readme}
    - (+) {$prep:assets}
    - sip pub get -r
  changelog: |
    echo "Copying CHANGELOG.md to all packages"
    for dir in $(ls -d packages/*); do
      cp CHANGELOG.md $dir/CHANGELOG.md
    done
  license: |
    echo "Copying LICENSE to all packages"
    for dir in $(ls -d packages/*); do
      cp LICENSE $dir/LICENSE
    done
  readme: |
    echo "Copying README.md to packages/sip & example"
    cp README.md packages/sip/README.md
    cp README.md packages/sip/example/README.md
    # update asset paths to ../assets in example
    sed -i '' "s|assets/|../assets/|g" packages/sip/example/README.md
  pubspecs: |
    # get version from changelog
    version=$(grep -m 1 "# " CHANGELOG.md | awk '{print $2}')

    echo "Updating pubspec.yaml version to $version"
    for dir in packages/*; do
      sed -i '' "s|^version: .*|version: $version|g" "$dir/pubspec.yaml"
    done
  assets: |
    echo "Copying assets to packages/sip"
    rm -rf packages/sip/assets
    cp -r assets packages/sip

publish:
  (bail):
  (command):
    - sip test --bail --recursive --concurrent
    - "{$prep}"
    - "{$_packages} dart pub publish"
    - "{$publish:commit}"
    - "{$publish:tag}"
    - "{$publish:_push}"
  commit: |
    # get version from changelog
    version=$(grep -m 1 "# " CHANGELOG.md | awk '{print $2}')

    echo "Committing version $version"
    git add .
    git commit -m "v$version"
  tag: |
    # get version from changelog
    version=$(grep -m 1 "# " CHANGELOG.md | awk '{print $2}')

    echo "Tagging version $version"
    git tag -a "v$version" -m "v$version"
  _push: |
    echo "Pushing to origin"
    git push
    git push --tags
